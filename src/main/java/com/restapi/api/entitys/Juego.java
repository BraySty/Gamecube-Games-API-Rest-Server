package com.restapi.api.entitys;

import org.hibernate.annotations.Formula;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

// Generated 23 feb 2023 21:30:19 by Hibernate Tools 4.3.6.Final

/**
 * JuegoGamecube generated by hbm2java
 */
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name = "juego_gamecube", catalog = "gamecube")
public class Juego implements java.io.Serializable {

	@Id
	@Column(name = "ID_Game", unique = true, nullable = false)
	private int id;
	@Column(name = "Title", length = 100)
	private String title;
	@Column(name = "Developer", length = 100)
	private String developer;
	@Column(name = "Publisher", length = 100)
	private String publisher;
	@Column(name = "Europe__PAL", length = 100)
	private String europePal;
	@Column(name = "Japan", length = 100)
	private String japan;
	@Column(name = "North_America", length = 100)
	private String northAmerica;
	@Formula( "CONCAT(Title,Developer,Publisher,Europe__PAL,Japan,North_America)" )
	private String concatFields;
	
	public Juego(int id) {
		this.id = id;
	}

	public Juego(int id, String title, String developer, String publisher, String europePal, String japan, String northAmerica) {
		this.id = id;
		this.title = title;
		this.developer = developer;
		this.publisher = publisher;
		this.europePal = europePal;
		this.japan = japan;
		this.northAmerica = northAmerica;
	}

	@Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Juego{");
        sb.append("id=").append(id);
        sb.append(", title=").append(title);
        sb.append(", developer=").append(developer);
        sb.append(", publisher=").append(publisher);
        sb.append(", europePal=").append(europePal);
        sb.append(", japan=").append(japan);
        sb.append(", northAmerica=").append(northAmerica);
        sb.append('}');
        return sb.toString();
    }

}
